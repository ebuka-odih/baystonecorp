/*
 lozad.js - v1.16.0 - 2020-09-06
 https://github.com/ApoorvSaxena/lozad.js
 Copyright (c) 2020 Apoorv Saxena; Licensed MIT */
!function(f,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):f.lozad=e()}(this,function(){function f(a){a.setAttribute("data-loaded",!0)}var e="undefined"!=typeof document&&document.documentMode,p={rootMargin:"0px",threshold:0,load:function(a){if("picture"===a.nodeName.toLowerCase()){var b=a.querySelector("img"),d=!1;null===b&&(b=document.createElement("img"),d=!0);e&&a.getAttribute("data-iesrc")&&(b.src=a.getAttribute("data-iesrc"));
a.getAttribute("data-alt")&&(b.alt=a.getAttribute("data-alt"));d&&a.append(b)}if("video"===a.nodeName.toLowerCase()&&!a.getAttribute("data-src")&&a.children){b=a.children;d=void 0;for(var c=0;c<=b.length-1;c++)(d=b[c].getAttribute("data-src"))&&(b[c].src=d);a.load()}a.getAttribute("data-poster")&&(a.poster=a.getAttribute("data-poster"));a.getAttribute("data-src")&&(a.src=a.getAttribute("data-src"));a.getAttribute("data-srcset")&&a.setAttribute("srcset",a.getAttribute("data-srcset"));b=",";(a.getAttribute("data-background-delimiter")&&
(b=a.getAttribute("data-background-delimiter")),a.getAttribute("data-background-image"))?a.style.backgroundImage="url('"+a.getAttribute("data-background-image").split(b).join("'),url('")+"')":a.getAttribute("data-background-image-set")&&(b=a.getAttribute("data-background-image-set").split(b),d=b[0].substr(0,b[0].indexOf(" "))||b[0],d=-1===d.indexOf("url(")?"url("+d+")":d,1===b.length?a.style.backgroundImage=d:a.setAttribute("style",(a.getAttribute("style")||"")+"background-image: "+d+"; background-image: -webkit-image-set("+
b+"); background-image: image-set("+b+")"));a.getAttribute("data-toggle-class")&&a.classList.toggle(a.getAttribute("data-toggle-class"))},loaded:function(){}},h=function(a){return"true"===a.getAttribute("data-loaded")},n=function(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:document;return a instanceof Element?[a]:a instanceof NodeList?a:b.querySelectorAll(a)};return function(){var a=0<arguments.length&&void 0!==arguments[0]?arguments[0]:".lozad",b=Object.assign({},p,1<arguments.length&&
void 0!==arguments[1]?arguments[1]:{}),d=b.root,c=b.rootMargin,e=b.threshold,k=b.load,l=b.loaded,g=void 0;"undefined"!=typeof window&&window.IntersectionObserver&&(g=new IntersectionObserver(function(a,b){a.forEach(function(a){(0<a.intersectionRatio||a.isIntersecting)&&(b.unobserve(a.target),h(a.target)||(k(a.target),f(a.target),l(a.target)))})},{root:d,rootMargin:c,threshold:e}));var m;b=n(a,d);for(c=0;c<b.length;c++)(m=b[c]).getAttribute("data-placeholder-background")&&(m.style.background=m.getAttribute("data-placeholder-background"));
return{observe:function(){for(var b=n(a,d),c=0;c<b.length;c++)h(b[c])||(g?g.observe(b[c]):(k(b[c]),f(b[c]),l(b[c])))},triggerLoad:function(a){h(a)||(k(a),f(a),l(a))},observer:g}}});